# generated by rye
# use `rye lock` or `rye sync` to update this lockfile
#
# last locked with the following flags:
#   pre: false
#   features: []
#   all-features: false
#   with-sources: false
#   generate-hashes: false

-e file:.
absl-py==2.1.0
    # via tensorboard
asttokens==2.4.1
    # via stack-data
comm==0.2.2
    # via ipykernel
contourpy==1.2.1
    # via matplotlib
cycler==0.12.1
    # via matplotlib
debugpy==1.8.1
    # via ipykernel
decorator==5.1.1
    # via ipython
executing==2.0.1
    # via stack-data
filelock==3.14.0
    # via torch
fonttools==4.51.0
    # via matplotlib
fsspec==2024.3.1
    # via torch
grpcio==1.64.0
    # via tensorboard
imageio==2.34.1
    # via scikit-image
ipykernel==6.29.4
    # via decurved
ipython==8.25.0
    # via ipykernel
jedi==0.19.1
    # via ipython
jinja2==3.1.4
    # via torch
jupyter-client==8.6.2
    # via ipykernel
jupyter-core==5.7.2
    # via ipykernel
    # via jupyter-client
kiwisolver==1.4.5
    # via matplotlib
lazy-loader==0.4
    # via scikit-image
markdown==3.6
    # via tensorboard
markupsafe==2.1.5
    # via jinja2
    # via werkzeug
matplotlib==3.8.4
    # via decurved
matplotlib-inline==0.1.7
    # via ipykernel
    # via ipython
mpmath==1.3.0
    # via sympy
nest-asyncio==1.6.0
    # via ipykernel
networkx==3.3
    # via scikit-image
    # via torch
numpy==1.26.4
    # via contourpy
    # via decurved
    # via imageio
    # via matplotlib
    # via opencv-python
    # via pandas
    # via scikit-image
    # via scipy
    # via tensorboard
    # via tifffile
    # via torchvision
nvidia-cublas-cu12==12.1.3.1
    # via nvidia-cudnn-cu12
    # via nvidia-cusolver-cu12
    # via torch
nvidia-cuda-cupti-cu12==12.1.105
    # via torch
nvidia-cuda-nvrtc-cu12==12.1.105
    # via torch
nvidia-cuda-runtime-cu12==12.1.105
    # via torch
nvidia-cudnn-cu12==8.9.2.26
    # via torch
nvidia-cufft-cu12==11.0.2.54
    # via torch
nvidia-curand-cu12==10.3.2.106
    # via torch
nvidia-cusolver-cu12==11.4.5.107
    # via torch
nvidia-cusparse-cu12==12.1.0.106
    # via nvidia-cusolver-cu12
    # via torch
nvidia-nccl-cu12==2.20.5
    # via torch
nvidia-nvjitlink-cu12==12.4.127
    # via nvidia-cusolver-cu12
    # via nvidia-cusparse-cu12
nvidia-nvtx-cu12==12.1.105
    # via torch
opencv-python==4.10.0.84
    # via decurved
packaging==24.0
    # via ipykernel
    # via lazy-loader
    # via matplotlib
    # via scikit-image
pandas==2.2.2
    # via decurved
parso==0.8.4
    # via jedi
pexpect==4.9.0
    # via ipython
pillow==10.3.0
    # via decurved
    # via imageio
    # via matplotlib
    # via scikit-image
    # via torchvision
platformdirs==4.2.2
    # via jupyter-core
prompt-toolkit==3.0.47
    # via ipython
protobuf==4.25.0
    # via decurved
    # via tensorboard
psutil==6.0.0
    # via ipykernel
ptyprocess==0.7.0
    # via pexpect
pure-eval==0.2.2
    # via stack-data
pygments==2.18.0
    # via ipython
pyparsing==3.1.2
    # via matplotlib
python-dateutil==2.9.0.post0
    # via jupyter-client
    # via matplotlib
    # via pandas
pytz==2024.1
    # via pandas
pyzmq==26.0.3
    # via ipykernel
    # via jupyter-client
scikit-image==0.24.0
    # via decurved
scipy==1.13.1
    # via decurved
    # via scikit-image
    # via torchdiffeq
setuptools==70.0.0
    # via tensorboard
six==1.16.0
    # via asttokens
    # via python-dateutil
    # via tensorboard
stack-data==0.6.3
    # via ipython
sympy==1.12
    # via torch
tensorboard==2.16.2
    # via decurved
tensorboard-data-server==0.7.2
    # via tensorboard
tifffile==2024.6.18
    # via scikit-image
torch==2.3.0
    # via decurved
    # via torchdiffeq
    # via torchvision
torchdiffeq==0.2.3
    # via decurved
torchvision==0.18.0
    # via decurved
tornado==6.4.1
    # via ipykernel
    # via jupyter-client
tqdm==4.66.4
    # via decurved
traitlets==5.14.3
    # via comm
    # via ipykernel
    # via ipython
    # via jupyter-client
    # via jupyter-core
    # via matplotlib-inline
typing-extensions==4.11.0
    # via torch
tzdata==2024.1
    # via pandas
wcwidth==0.2.13
    # via prompt-toolkit
werkzeug==3.0.3
    # via tensorboard
